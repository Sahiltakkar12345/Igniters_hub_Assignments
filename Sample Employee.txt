create database SampleEmployee;
use SampleEmployee;

CREATE TABLE employees (
    emp_no      INT             NOT NULL,  -- UNSIGNED AUTO_INCREMENT??
    birth_date  DATE            NOT NULL,
    first_name  VARCHAR(14)     NOT NULL,
    last_name   VARCHAR(16)     NOT NULL,
    gender      ENUM ('M','F')  NOT NULL,  -- Enumeration of either 'M' or 'F'  
    hire_date   DATE            NOT NULL,
    PRIMARY KEY (emp_no)                   -- Index built automatically on primary-key column
                                           -- INDEX (first_name)
                                           -- INDEX (last_name)
);

INSERT INTO employees (emp_no, birth_date, first_name, last_name, gender, hire_date)
VALUES
    (1001, '1990-01-15', 'John', 'Doe', 'M', '1998-05-01'),
    (1002, '1988-03-20', 'Jane', 'Smith', 'F', '1990-08-10'),
    (1003, '1995-07-12', 'Michael', 'Johnson', 'M', '1992-02-18'),
    (1004, '1992-11-05', 'Emily', 'Brown', 'F', '1999-04-22'),
    (1005, '1987-09-30', 'Robert', 'Lee', 'M', '2000-11-03'),
    (1006, '1993-04-25', 'Maria', 'Garcia', 'F', '1998-03-12'),
    (1007, '1998-08-08', 'Daniel', 'Martinez', 'M', '2016-09-05'),
    (1008, '1991-12-03', 'Sophia', 'Wang', 'F', '2015-06-14'),
    (1009, '1989-06-18', 'William', 'Nguyen', 'M', '2014-01-27'),
    (1010, '1994-02-10', 'Olivia', 'Kim', 'F', '2023-07-20');

CREATE TABLE departments (
    dept_no     CHAR(4)         NOT NULL,  -- in the form of 'dxxx'
    dept_name   VARCHAR(40)     NOT NULL,
    PRIMARY KEY (dept_no),                 -- Index built automatically
    UNIQUE  KEY (dept_name)                -- Build INDEX on this unique-value column
);

INSERT INTO departments (dept_no, dept_name)
VALUES
    ('d001', 'Human Resources'),
    ('d002', 'Finance'),
    ('d003', 'Marketing'),
    ('d004', 'Sales'),
    ('d005', 'Research and Development'),
    ('d006', 'Information Technology'),
    ('d007', 'Customer Service'),
    ('d008', 'Operations'),
    ('d009', 'Quality Assurance'),
    ('d010', 'Legal');
    
    CREATE TABLE dept_emp (
    emp_no      INT         NOT NULL,
    dept_no     CHAR(4)     NOT NULL,
    from_date   DATE        NOT NULL,
    to_date     DATE        NOT NULL,
    KEY         (emp_no),   -- Build INDEX on this non-unique-value column
    KEY         (dept_no),  -- Build INDEX on this non-unique-value column
    FOREIGN KEY (emp_no) REFERENCES employees (emp_no) ON DELETE CASCADE,
           -- Cascade DELETE from parent table 'employee' to this child table
           -- If an emp_no is deleted from parent 'employee', all records
           --  involving this emp_no in this child table are also deleted
           -- ON UPDATE CASCADE??
    FOREIGN KEY (dept_no) REFERENCES departments (dept_no) ON DELETE CASCADE,
           -- ON UPDATE CASCADE??
    PRIMARY KEY (emp_no, dept_no)
           -- Might not be unique?? Need to include from_date
);

INSERT INTO dept_emp (emp_no, dept_no, from_date, to_date)
VALUES
    (1001, 'd001', '2020-05-01', '2023-01-15'),
    (1002, 'd002', '2019-08-10', '2023-02-20'),
    (1003, 'd003', '2021-02-18', '2023-07-12'),
    (1004, 'd004', '2018-04-22', '2023-11-05'),
    (1005, 'd005', '2017-11-03', '2023-09-30'),
    (1006, 'd006', '2022-03-12', '2023-04-25'),
    (1007, 'd007', '2016-09-05', '2023-08-08'),
    (1008, 'd008', '2015-06-14', '2023-12-03'),
    (1009, 'd009', '2014-01-27', '2023-06-18'),
    (1010, 'd010', '2023-07-20', '2024-02-10');
    
    CREATE TABLE dept_manager (
   dept_no      CHAR(4)  NOT NULL,
   emp_no       INT      NOT NULL,
   from_date    DATE     NOT NULL,
   to_date      DATE     NOT NULL,
   KEY         (emp_no),
   KEY         (dept_no),
   FOREIGN KEY (emp_no)  REFERENCES employees (emp_no)    ON DELETE CASCADE,
                                  -- ON UPDATE CASCADE??
   FOREIGN KEY (dept_no) REFERENCES departments (dept_no) ON DELETE CASCADE,
   PRIMARY KEY (emp_no, dept_no)  -- might not be unique?? Need from_date
);

INSERT INTO dept_manager (dept_no, emp_no, from_date, to_date)
VALUES
    ('d001', 1001, '2020-05-01', '2023-01-15'),
    ('d002', 1002, '2019-08-10', '2023-02-20'),
    ('d003', 1003, '2021-02-18', '2023-07-12'),
    ('d004', 1004, '2018-04-22', '2023-11-05'),
    ('d005', 1005, '2017-11-03', '2023-09-30'),
    ('d006', 1006, '2022-03-12', '2023-04-25'),
    ('d007', 1007, '2016-09-05', '2023-08-08'),
    ('d008', 1008, '2015-06-14', '2023-12-03'),
    ('d009', 1009, '2014-01-27', '2023-06-18'),
    ('d010', 1010, '2023-07-20', '2024-02-10');
    
    CREATE TABLE titles (
    emp_no      INT          NOT NULL,
    title       VARCHAR(50)  NOT NULL,
    from_date   DATE         NOT NULL,
    to_date     DATE,
    KEY         (emp_no),
    FOREIGN KEY (emp_no) REFERENCES employees (emp_no) ON DELETE CASCADE,
                         -- ON UPDATE CASCADE??
    PRIMARY KEY (emp_no, title, from_date)
       -- This ensures unique combination. 
       -- An employee may hold the same title but at different period
);

INSERT INTO titles (emp_no, title, from_date, to_date)
VALUES
    (1001, 'Software Engineer', '2020-05-01', NULL),
    (1002, 'Data Analyst', '2019-08-10', '2023-02-20'),
    (1003, 'Product Manager', '2021-02-18', '2023-07-12'),
    (1004, 'Quality Assurance Specialist', '2018-04-22', '2023-11-05'),
    (1005, 'UI/UX Designer', '2017-11-03', '2023-09-30'),
    (1006, 'Database Administrator', '2022-03-12', '2023-04-25'),
    (1007, 'Business Analyst', '2016-09-05', '2023-08-08'),
    (1008, 'Project Manager', '2015-06-14', '2023-12-03'),
    (1009, 'Systems Architect', '2014-01-27', '2023-06-18'),
    (1010, 'Technical Writer', '2023-07-20', NULL);

CREATE TABLE salaries (
    emp_no      INT    NOT NULL,
    salary      INT    NOT NULL,
    from_date   DATE   NOT NULL,
    to_date     DATE   NOT NULL,
    KEY         (emp_no),
    FOREIGN KEY (emp_no) REFERENCES employees (emp_no) ON DELETE CASCADE,
    PRIMARY KEY (emp_no, from_date)
);

insert INTO salaries (emp_no, salary, from_date, to_date)
VALUES
    (1001, 75000, '2020-05-01', '2023-01-15'),
    (1002, 60000, '2019-08-10', '2023-02-20'),
    (1003, 90000, '2021-02-18', '2023-07-12'),
    (1004, 55000, '2018-04-22', '2023-11-05'),
    (1005, 80000, '2017-11-03', '2023-09-30'),
    (1006, 70000, '2022-03-12', '2023-04-25'),
    (1007, 62000, '2016-09-05', '2023-08-08'),
    (1008, 85000, '2015-06-14', '2023-12-03'),
    (1009, 72000, '2014-01-27', '2023-06-18'),
    (1010, 68000, '2023-07-20', '2024-02-10');
    
    -- Query 1
    SELECT e.first_name, e.last_name, d.dept_name
FROM employees e
INNER JOIN departments d;

--  Query 2
SELECT e.emp_no,e.first_name, e.last_name
FROM employees e
WHERE e.hire_date < '2000-01-01';

-- Query 3
SELECT
    D.dept_name AS "Department Name",
    E.first_name AS "Manager First Name",
    E.last_name AS "Manager Last Name"
FROM
    departments D
LEFT OUTER JOIN
    dept_manager DM ON D.dept_no = DM.dept_no
LEFT OUTER JOIN
    employees E ON DM.emp_no = E.emp_no
ORDER BY
    D.dept_name;